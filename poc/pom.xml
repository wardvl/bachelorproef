<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.springframework.samples.service.service</groupId>
    <artifactId>microservices-demo</artifactId>
    <version>2.0.0.RELEASE</version>
    <packaging>jar</packaging>

    <properties>
        <!-- Stand-alone RESTFul application for testing only -->
        <start-class>io.pivotal.microservices.services.Main</start-class>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <!-- Setup Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring MVC & REST, use Embedded Tomcat -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring Data common components -->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>

        <dependency>
            <!-- Testing starter -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring Data JPA Repository support -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <!-- In-memory database for testing/demos -->
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Cloud starter -->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
        </dependency>

        <dependency>
            <!-- Eureka service registration - CHANGED -->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>accounts</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.4.11</version>
                        <configuration>
                            <imageName>624878932454.dkr.ecr.eu-west-3.amazonaws.com/accounts-service</imageName>
                            <imageTags>
                                <imageTag>latest</imageTag>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                            <maintainer>ward.vanlerberghe.i2568@student.hogent.be</maintainer>
                            <exposes>
                                <expose>2222</expose>
                            </exposes>
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>
                            <baseImage>adoptopenjdk/openjdk8:jdk8u172-b11</baseImage>
                            <env>
                                <TZ>Europe/Brussels</TZ>
                            </env>
                            <workdir>/service</workdir>
                            <cmd>java $JAVA_OPTS -jar microservices-demo-2.0.0.RELEASE.jar accounts</cmd>
                            <!-- copy the service's jar file from target into the root directory of the image -->
                            <resources>
                                <resource>
                                    <targetPath>/service</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>*.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>web</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.4.11</version>
                        <configuration>
                            <imageName>624878932454.dkr.ecr.eu-west-3.amazonaws.com/web-service</imageName>
                            <imageTags>
                                <imageTag>latest</imageTag>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                            <maintainer>ward.vanlerberghe.i2568@student.hogent.be</maintainer>
                            <exposes>
                                <expose>3333</expose>
                            </exposes>
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>
                            <baseImage>adoptopenjdk/openjdk8:jdk8u172-b11</baseImage>
                            <env>
                                <TZ>Europe/Brussels</TZ>
                            </env>
                            <workdir>/service</workdir>
                            <cmd>java $JAVA_OPTS -jar microservices-demo-2.0.0.RELEASE.jar web</cmd>
                            <!-- copy the service's jar file from target into the root directory of the image -->
                            <resources>
                                <resource>
                                    <targetPath>/service</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>*.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>registration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.4.11</version>
                        <configuration>
                            <imageName>624878932454.dkr.ecr.eu-west-3.amazonaws.com/registration-service</imageName>
                            <imageTags>
                                <imageTag>latest</imageTag>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                            <maintainer>ward.vanlerberghe.i2568@student.hogent.be</maintainer>
                            <exposes>
                                <expose>1111</expose>
                            </exposes>
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>
                            <baseImage>adoptopenjdk/openjdk8:jdk8u172-b11</baseImage>
                            <env>
                                <TZ>Europe/Brussels</TZ>
                            </env>
                            <workdir>/service</workdir>
                            <cmd>java $JAVA_OPTS -jar microservices-demo-2.0.0.RELEASE.jar registration</cmd>
                            <!-- copy the service's jar file from target into the root directory of the image -->
                            <resources>
                                <resource>
                                    <targetPath>/service</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>*.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
